#+title: Keybinding Tools
#+property: header-args:emacs-lisp  :mkdirp yes :lexical t :exports code
#+property: header-args:emacs-lisp+ :tangle keybinding-tools.el
#+property: header-args:emacs-lisp+ :mkdirp yes :noweb no-export
* Which-key
The most useful quality of life packages which shows you a snippet of what keybinds can be followed, for when you forget or just learning (or just having a lot of key binds).
#+begin_src emacs-lisp
(use-package which-key
  :straight (:build t)
  :defer t
  :init (which-key-mode)
  :diminish which-key-mode
  :config
  (setq which-key-idle-delay 1))
#+end_src

* General
General is a package for key bind management. It integrates with Evil for declaring keybindings for specific states. It's a good replacement for defind-key and evil-define-key and other similar functions.
All default keybinds will be prefixed with ~SPC~.
Specific mode (often major modes) will be prefixed by ~SPC m~.
#+begin_src emacs-lisp
(use-package general
  :straight (:build t)
  :init
  (general-auto-unbind-keys)
  :config
  (general-create-definer james/undefine
    :keymaps 'override
    :states '(normal emacs))
  (general-create-definer james/evil
    :states '(normal))
  (general-create-definer james/leader-key
    :states '(normal insert visual emacs)
    :keymaps 'override
    :prefix "SPC"
    :global-prefix "C-SPC")
  (general-create-definer james/major-leader-key
    :states '(normal insert visual emacs)
    :keymaps 'override
    :prefix "SPC m"
    :global-prefix "M-m"))
#+end_src
* Evil
Sane default keybindings.
#+begin_src emacs-lisp
(use-package evil
  :straight (:build t)
  :after (general)
  :init
  (setq evil-want-integration t
        evil-want-keybinding nil
        evil-want-C-u-scroll t
        evil-want-C-i-jump nil)
  (require 'evil-vars)
  :config
  <<evil-undefine-keys>>
  (evil-mode 1)
  (setq evil-want-fine-undo t) ; more granular undo with evil
  (evil-set-initial-state 'messages-buffer-mode 'normal)
  (evil-set-initial-state 'dashboard-mode 'normal))
#+end_src

#+name: evil-undefine-keys
#+begin_src emacs-lisp :tangle no
(evil-global-set-key 'motion "j" 'evil-next-visual-line)
(evil-global-set-key 'motion "k" 'evil-previous-visual-line)

(general-define-key
 :keymaps 'evil-motion-state-map
 "SPC" nil
 ","   nil)
#+end_src

* Hydra
[[https://github.com/abo-abo/hydra][Hydra]] is a simple menu creator for keybindings.
#+begin_src emacs-lisp
(use-package hydra
  :straight (:build t)
  :defer t)
#+end_src
